[{"C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\index.js":"1","C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\App.js":"2","C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\reportWebVitals.js":"3","C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\App3.js":"4","C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\Header.js":"5","C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\HomeBanner.js":"6","C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\Login.js":"7","C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\List.js":"8","C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\Banner.js":"9","C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\FirebaseConfig.js":"10","C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\api\\Api.js":"11"},{"size":591,"mtime":1678881537008,"results":"12","hashOfConfig":"13"},{"size":1454,"mtime":1678879852929,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1678875705125,"results":"15","hashOfConfig":"13"},{"size":0,"mtime":1678879723903,"results":"16","hashOfConfig":"13"},{"size":964,"mtime":1677584453175,"results":"17","hashOfConfig":"13"},{"size":1152,"mtime":1676468758891,"results":"18","hashOfConfig":"13"},{"size":4528,"mtime":1678790892695,"results":"19","hashOfConfig":"13"},{"size":841,"mtime":1678878176609,"results":"20","hashOfConfig":"13"},{"size":746,"mtime":1676921576570,"results":"21","hashOfConfig":"13"},{"size":775,"mtime":1677324350726,"results":"22","hashOfConfig":"13"},{"size":472,"mtime":1678275071792,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dq6by7",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\index.js",[],[],"C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\App.js",[],[],[],"C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\App3.js",[],[],"C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\Header.js",[],[],"C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\HomeBanner.js",[],[],"C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\Login.js",["61"],[],"import { useNavigate, Link, useLocation } from \"react-router-dom\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { firebaseConfig } from \"./FirebaseConfig.js\";\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\nimport { useEffect, useState } from \"react\";\r\nconst Login = () => {\r\n  const app = initializeApp(firebaseConfig);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const page = location.pathname === \"/login\" ? true : false;\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isUserExist, setUserExist] = useState(false);\r\n  const [isEmailUsed, setIsEmailUsed] = useState(false);\r\n  const [emailvalid, setEmailValid] = useState(true);\r\n  const [passwordvalid, setPasswordValid] = useState(true);\r\n  const auth = getAuth();\r\n\r\n  const validation = (fieldName, value) => {\r\n    switch (fieldName) {\r\n      case \"email\":\r\n        return value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n      case \"password\":\r\n        return value.length >= 6;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const ctaClickHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validation(\"email\", email) || !validation(\"password\", password)) {\r\n      setEmailValid(validation(\"email\", email));\r\n      setPasswordValid(validation(\"password\", password));\r\n      return;\r\n    }\r\n\r\n    if (page) {\r\n      signInWithEmailAndPassword(auth, email, password)\r\n        .then((auth) => {\r\n          if (auth) {\r\n            navigate(\"/dashboard\");\r\n          }\r\n        })\r\n        .catch((error) => setUserExist(true));\r\n      //  user not found //\r\n    } else {\r\n      createUserWithEmailAndPassword(auth, email, password)\r\n        .then((auth) => {\r\n          if (auth) {\r\n            navigate(\"/dashboard\");\r\n          }\r\n        })\r\n        .catch((error) => setIsEmailUsed(true));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUserExist(false);\r\n    setIsEmailUsed(false);\r\n  }, [location]);\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"holder\">\r\n        <h1 className=\"text-white\">{page ? \"Sign In\" : \"Register\"}</h1>\r\n        <br />\r\n        <form>\r\n          <input\r\n            className=\"form-control\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n          />\r\n          {!emailvalid && <p className=\"text-dander\">Email is invalid/blank</p>}\r\n\r\n          <input\r\n            className=\"form-control\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n          {!passwordvalid && (\r\n            <p className=\"text-dander\">Password is invalid/blank</p>\r\n          )}\r\n\r\n          <button\r\n            className=\"btn btn-danger btn-block\"\r\n            onClick={ctaClickHandler}\r\n          >\r\n            {page ? \"Sign In\" : \"Register\"}\r\n          </button>\r\n          <br />\r\n          {page && (\r\n            <div className=\"form-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                id=\"flexCheckDefault\"\r\n              />\r\n              <label\r\n                className=\"form-check-label text-white\"\r\n                htmlFor=\"flexCheckDefault\"\r\n              >\r\n                Remember Me\r\n              </label>\r\n            </div>\r\n          )}\r\n        </form>\r\n        <br />\r\n        <br />\r\n        {isUserExist && (\r\n          <p className=\"text-danger\">User does not exist | Go for Signup</p>\r\n        )}\r\n        {isEmailUsed && (\r\n          <p className=\"text-danger\">Email already in use | Go for Sign In</p>\r\n        )}\r\n\r\n        <div className=\"login-form-other\">\r\n          <div className=\"login-signup-now\">\r\n            {page ? \"New to Netflix?\" : \"Existing User\"} &nbsp;\r\n            <Link className=\" \" to={page ? \"/register\" : \"/login\"}>\r\n              {page ? \"Sign up now\" : \"Sign In\"}\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"shadow\"></div>\r\n      <img\r\n        className=\"concord-img vlv-creative\"\r\n        src=\"https://assets.nflxext.com/ffe/siteui/vlv3/6e32b96a-d4be-4e44-a19b-1bd2d2279b51/ee068656-14b9-4821-89b4-53b4937d9f1c/IN-en-20220516-popsignuptwoweeks-perspective_alpha_website_small.jpg\"\r\n        alt=\"\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\List.js",["62"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { fetchData } from \"./api/Api\";\r\nconst List = ({ title, param }) => {\r\n  const [list, setList] = useState([]);\r\n  useEffect(() => {\r\n    fetchData(param).then((res) => setList(res.data.results));\r\n  }, []);\r\n  console.log(list);\r\n  return (\r\n    <div className=\"list\">\r\n      <div className=\"row\">\r\n        <h2 className=\"text-white title\">{title}</h2>\r\n        <div className=\"col\">\r\n          <div className=\"row__posters\">\r\n            {list.map((item) => (\r\n              <img\r\n                className=\"row__poster row__posterLarge\"\r\n                src={`https://image.tmdb.org/t/p/original${item.poster_path}`}\r\n                alt={item.title}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default List;\r\n","C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\Banner.js",[],[],"C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\FirebaseConfig.js",[],[],"C:\\Users\\Dell\\Desktop\\nitflix\\netflix\\src\\api\\Api.js",[],[],{"ruleId":"63","severity":1,"message":"64","line":11,"column":9,"nodeType":"65","messageId":"66","endLine":11,"endColumn":12},{"ruleId":"67","severity":1,"message":"68","line":7,"column":6,"nodeType":"69","endLine":7,"endColumn":8,"suggestions":"70"},"no-unused-vars","'app' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'param'. Either include it or remove the dependency array.","ArrayExpression",["71"],{"desc":"72","fix":"73"},"Update the dependencies array to be: [param]",{"range":"74","text":"75"},[262,264],"[param]"]